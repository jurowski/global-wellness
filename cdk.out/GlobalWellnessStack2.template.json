{
 "Resources": {
  "HappinessTableD068FD54": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "countryYear",
      "AttributeType": "S"
     },
     {
      "AttributeName": "country",
      "AttributeType": "S"
     },
     {
      "AttributeName": "year",
      "AttributeType": "N"
     },
     {
      "AttributeName": "rank",
      "AttributeType": "N"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "GlobalSecondaryIndexes": [
     {
      "IndexName": "yearIndex",
      "KeySchema": [
       {
        "AttributeName": "year",
        "KeyType": "HASH"
       },
       {
        "AttributeName": "rank",
        "KeyType": "RANGE"
       }
      ],
      "Projection": {
       "ProjectionType": "ALL"
      }
     }
    ],
    "KeySchema": [
     {
      "AttributeName": "countryYear",
      "KeyType": "HASH"
     },
     {
      "AttributeName": "country",
      "KeyType": "RANGE"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "GlobalWellnessStack2/HappinessTable/Resource"
   }
  },
  "WorldHappinessFunctionServiceRoleE8E0453E": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "GlobalWellnessStack2/WorldHappinessFunction/ServiceRole/Resource"
   }
  },
  "WorldHappinessFunctionServiceRoleDefaultPolicy3801E60B": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:Scan"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "HappinessTableD068FD54",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "HappinessTableD068FD54",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "WorldHappinessFunctionServiceRoleDefaultPolicy3801E60B",
    "Roles": [
     {
      "Ref": "WorldHappinessFunctionServiceRoleE8E0453E"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "GlobalWellnessStack2/WorldHappinessFunction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "WorldHappinessFunctionF4BC9A76": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-881097718012-us-east-1",
     "S3Key": "93fd8609b63539f58940bbe897b126bd2e2e5203f2f8b7a3d2f2dcd498f9f778.zip"
    },
    "Environment": {
     "Variables": {
      "TABLE_NAME": {
       "Ref": "HappinessTableD068FD54"
      },
      "TABLE_YEAR_INDEX": "yearIndex"
     }
    },
    "Handler": "index.handler",
    "MemorySize": 1024,
    "Role": {
     "Fn::GetAtt": [
      "WorldHappinessFunctionServiceRoleE8E0453E",
      "Arn"
     ]
    },
    "Runtime": "nodejs20.x",
    "Timeout": 30
   },
   "DependsOn": [
    "WorldHappinessFunctionServiceRoleDefaultPolicy3801E60B",
    "WorldHappinessFunctionServiceRoleE8E0453E"
   ],
   "Metadata": {
    "aws:cdk:path": "GlobalWellnessStack2/WorldHappinessFunction/Resource",
    "aws:asset:path": "asset.93fd8609b63539f58940bbe897b126bd2e2e5203f2f8b7a3d2f2dcd498f9f778",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "WorldHappinessUpdaterFunctionServiceRole80CF7220": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "GlobalWellnessStack2/WorldHappinessUpdaterFunction/ServiceRole/Resource"
   }
  },
  "WorldHappinessUpdaterFunctionServiceRoleDefaultPolicyDE05E20E": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchWriteItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "HappinessTableD068FD54",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "HappinessTableD068FD54",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "WorldHappinessUpdaterFunctionServiceRoleDefaultPolicyDE05E20E",
    "Roles": [
     {
      "Ref": "WorldHappinessUpdaterFunctionServiceRole80CF7220"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "GlobalWellnessStack2/WorldHappinessUpdaterFunction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "WorldHappinessUpdaterFunctionF500CAB5": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-881097718012-us-east-1",
     "S3Key": "7d69fad026b8ebe1866863a781e2040b38fc4487bae8b0f39beba83a1d734e37.zip"
    },
    "Environment": {
     "Variables": {
      "TABLE_NAME": {
       "Ref": "HappinessTableD068FD54"
      }
     }
    },
    "Handler": "index.handler",
    "MemorySize": 1024,
    "Role": {
     "Fn::GetAtt": [
      "WorldHappinessUpdaterFunctionServiceRole80CF7220",
      "Arn"
     ]
    },
    "Runtime": "nodejs20.x",
    "Timeout": 300
   },
   "DependsOn": [
    "WorldHappinessUpdaterFunctionServiceRoleDefaultPolicyDE05E20E",
    "WorldHappinessUpdaterFunctionServiceRole80CF7220"
   ],
   "Metadata": {
    "aws:cdk:path": "GlobalWellnessStack2/WorldHappinessUpdaterFunction/Resource",
    "aws:asset:path": "asset.7d69fad026b8ebe1866863a781e2040b38fc4487bae8b0f39beba83a1d734e37",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "WorldHappinessUpdateRule4D72DAF2": {
   "Type": "AWS::Events::Rule",
   "Properties": {
    "ScheduleExpression": "rate(1 day)",
    "State": "ENABLED",
    "Targets": [
     {
      "Arn": {
       "Fn::GetAtt": [
        "WorldHappinessUpdaterFunctionF500CAB5",
        "Arn"
       ]
      },
      "Id": "Target0"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "GlobalWellnessStack2/WorldHappinessUpdateRule/Resource"
   }
  },
  "WorldHappinessUpdateRuleAllowEventRuleGlobalWellnessStack2WorldHappinessUpdaterFunctionB2D539C505589477": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "WorldHappinessUpdaterFunctionF500CAB5",
      "Arn"
     ]
    },
    "Principal": "events.amazonaws.com",
    "SourceArn": {
     "Fn::GetAtt": [
      "WorldHappinessUpdateRule4D72DAF2",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "GlobalWellnessStack2/WorldHappinessUpdateRule/AllowEventRuleGlobalWellnessStack2WorldHappinessUpdaterFunctionB2D539C5"
   }
  },
  "WellnessApi5F797A40": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "Description": "API for Global Wellness Dashboard",
    "Name": "Global Wellness API"
   },
   "Metadata": {
    "aws:cdk:path": "GlobalWellnessStack2/WellnessApi/Resource"
   }
  },
  "WellnessApiDeploymentF7566996727304577f19e913fda4be6f5c8fbbee": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "Description": "API for Global Wellness Dashboard",
    "RestApiId": {
     "Ref": "WellnessApi5F797A40"
    }
   },
   "DependsOn": [
    "WellnessApihappinessGET6291930B",
    "WellnessApihappinessOPTIONS76F6F286",
    "WellnessApihappiness9C7EC670",
    "WellnessApiOPTIONSF2244758"
   ],
   "Metadata": {
    "aws:cdk:path": "GlobalWellnessStack2/WellnessApi/Deployment/Resource"
   }
  },
  "WellnessApiDeploymentStageprod82CFECF8": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "DeploymentId": {
     "Ref": "WellnessApiDeploymentF7566996727304577f19e913fda4be6f5c8fbbee"
    },
    "RestApiId": {
     "Ref": "WellnessApi5F797A40"
    },
    "StageName": "prod"
   },
   "Metadata": {
    "aws:cdk:path": "GlobalWellnessStack2/WellnessApi/DeploymentStage.prod/Resource"
   }
  },
  "WellnessApiOPTIONSF2244758": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Fn::GetAtt": [
      "WellnessApi5F797A40",
      "RootResourceId"
     ]
    },
    "RestApiId": {
     "Ref": "WellnessApi5F797A40"
    }
   },
   "Metadata": {
    "aws:cdk:path": "GlobalWellnessStack2/WellnessApi/Default/OPTIONS/Resource"
   }
  },
  "WellnessApihappiness9C7EC670": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "WellnessApi5F797A40",
      "RootResourceId"
     ]
    },
    "PathPart": "happiness",
    "RestApiId": {
     "Ref": "WellnessApi5F797A40"
    }
   },
   "Metadata": {
    "aws:cdk:path": "GlobalWellnessStack2/WellnessApi/Default/happiness/Resource"
   }
  },
  "WellnessApihappinessOPTIONS76F6F286": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "WellnessApihappiness9C7EC670"
    },
    "RestApiId": {
     "Ref": "WellnessApi5F797A40"
    }
   },
   "Metadata": {
    "aws:cdk:path": "GlobalWellnessStack2/WellnessApi/Default/happiness/OPTIONS/Resource"
   }
  },
  "WellnessApihappinessGETApiPermissionGlobalWellnessStack2WellnessApi5AF71857GEThappiness17CAAF89": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "WorldHappinessFunctionF4BC9A76",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-1:881097718012:",
       {
        "Ref": "WellnessApi5F797A40"
       },
       "/",
       {
        "Ref": "WellnessApiDeploymentStageprod82CFECF8"
       },
       "/GET/happiness"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "GlobalWellnessStack2/WellnessApi/Default/happiness/GET/ApiPermission.GlobalWellnessStack2WellnessApi5AF71857.GET..happiness"
   }
  },
  "WellnessApihappinessGETApiPermissionTestGlobalWellnessStack2WellnessApi5AF71857GEThappiness4E91248B": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "WorldHappinessFunctionF4BC9A76",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-1:881097718012:",
       {
        "Ref": "WellnessApi5F797A40"
       },
       "/test-invoke-stage/GET/happiness"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "GlobalWellnessStack2/WellnessApi/Default/happiness/GET/ApiPermission.Test.GlobalWellnessStack2WellnessApi5AF71857.GET..happiness"
   }
  },
  "WellnessApihappinessGET6291930B": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "WorldHappinessFunctionF4BC9A76",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "WellnessApihappiness9C7EC670"
    },
    "RestApiId": {
     "Ref": "WellnessApi5F797A40"
    }
   },
   "Metadata": {
    "aws:cdk:path": "GlobalWellnessStack2/WellnessApi/Default/happiness/GET/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/02OQW+DMAyFf0vvwWvpDr22m3qbVtHdKxM8lgIJwk4RivjvUwLTenqf/exn57A7HGC7wZEzXTVZa0oIV0HdKBz5FqrJYueqEsIXli2pt2+bYFYtdmWFEM7eajHORuuZLzR0htk4OyuDHYTCLftJL641ekpziWbF+xsykzAcoyjew8nrhuSETIoeZIUhFH4N8fEH7E2NQiNOEApiOfYmmSu+U9+6qSMrsftUXQXrFLNAQez8oCld+iD5cVU0V/pz1+TE8/zfTu/GIGPrOPPppfcyK+sqgju/PPIcdq+w3dzZmGzwVkxHUCz6C+5MSpSAAQAA"
   },
   "Metadata": {
    "aws:cdk:path": "GlobalWellnessStack2/CDKMetadata/Default"
   }
  }
 },
 "Outputs": {
  "WellnessApiEndpoint2D40F23F": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "WellnessApi5F797A40"
      },
      ".execute-api.us-east-1.",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "WellnessApiDeploymentStageprod82CFECF8"
      },
      "/"
     ]
    ]
   }
  },
  "ApiUrl": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "WellnessApi5F797A40"
      },
      ".execute-api.us-east-1.",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "WellnessApiDeploymentStageprod82CFECF8"
      },
      "/"
     ]
    ]
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}